#!/usr/bin/python3

# Copyright Â© 2014-2020 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

import argparse
import re
import subprocess as ipc

0_0  # Python >= 3.6 is required

line_match = re.compile(
r'''
^
\s+ [0-9]+: \s+
(?P<addr> [0-9a-f]+) \s+
(?P<size> [0-9]+) \s+
(?P<type> \w+) \s+
(?P<bind> \w+) \s+
(?P<vis> \w+) \s+
(?P<ndx> \w+) \s+
(?P<name> \S+) \s*
''', re.VERBOSE).match

def main():
    ap = argparse.ArgumentParser()
    ap.add_argument('library', metavar='LIBRARY')
    options = ap.parse_args()
    readelf = ipc.Popen(
        ['readelf', '-sW', options.library],
        stdout=ipc.PIPE
    )
    for line in readelf.stdout:
        line = line.decode('ASCII')
        match = line_match(line)
        if match is None:
            continue
        size = int(match.group('size'))
        if size == 0:
            continue
        tp = match.group('type')
        name = match.group('name')
        if tp == 'FUNC':
            print(f'int {name}() {{ return -1; }}')
        elif tp == 'OBJECT':
            print(f'char {name}[{size}];')

if __name__ == '__main__':
    main()

# vim:ts=4 sts=4 sw=4 et
